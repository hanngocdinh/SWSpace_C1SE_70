import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Header } from './components/layout/Header';
import { Footer } from './components/layout/Footer';
import { HeroSection } from './components/sections/HeroSection';
import { BenefitsSection } from './components/sections/BenefitsSection';
import { PricingSection } from './components/sections/PricingSection';
import { ReviewsSection } from './components/sections/ReviewsSection';
import { CTASection } from './components/sections/CTASection';
import { SignupModal } from './components/auth/SignupModal';
import { BookingState } from './types';
import { UserInfo } from './types';

interface AppProps {
  isAuthenticated: boolean;
  userInfo: UserInfo;
  login: (userData: UserInfo) => void;
  logout: () => void;
  selectedPlan: string;
  setSelectedPlan: React.Dispatch<React.SetStateAction<string>>;
  bookingState: BookingState;
  updateBooking: (updates: Partial<BookingState>) => void;
  resetBooking: () => void;
}

export default function App({
  isAuthenticated,
  userInfo,
  login,
  logout,
  selectedPlan,
  setSelectedPlan,
  bookingState,
  updateBooking,
  resetBooking
}: AppProps) {
  const navigate = useNavigate();
  const [showSignupModal, setShowSignupModal] = useState(false);

  const handleSelectPlan = (planName: string) => {
    setSelectedPlan(planName);
    if (!isAuthenticated) {
      setShowSignupModal(true);
    } else {
      // If authenticated, update booking state with the selected plan
      updateBooking({ selectedBookingPlan: planName });
      navigate('/booking-form'); // Navigate to the new booking form
    }
  };

  const handleSignup = (formData: any) => {
    const userData = {
      firstName: formData.firstName || 'User',
      lastName: formData.lastName || '',
      email: formData.email || '',
      phone: formData.phone || '',
      selectedPlan: selectedPlan,
      signupDate: new Date(),
      planStatus: 'inactive' as const
    };
    
    login(userData);
    setShowSignupModal(false);
    navigate('/welcome');
  };

  const handleTestLogin = () => {
    const userData = {
      firstName: 'John',
      lastName: 'Doe',
      email: 'john@example.com',
      phone: '+1234567890',
      selectedPlan: 'FIXED DESK',
      signupDate: new Date(),
      planStatus: 'active' as const
    };
    
    login(userData);
  };

  const handleBookSpace = () => {
    if (isAuthenticated) {
      // If user is authenticated, navigate to booking-form (new design)
      navigate('/booking-form');
    } else {
      // If not authenticated, show signup modal
      setShowSignupModal(true);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header 
        isAuthenticated={isAuthenticated}
        userInfo={userInfo}
        onGetStarted={() => setShowSignupModal(true)}
        onLogout={logout}
        onLogin={handleTestLogin}
      />

      <HeroSection 
        isAuthenticated={isAuthenticated}
        onGetStarted={() => setShowSignupModal(true)}
        onBookSpace={handleBookSpace}
      />

      <BenefitsSection />

      <PricingSection 
        onSelectPlan={handleSelectPlan}
        isAuthenticated={isAuthenticated}
        onBookSpace={handleBookSpace}
      />

      <ReviewsSection />

      <CTASection 
        isAuthenticated={isAuthenticated}
        onGetStarted={() => setShowSignupModal(true)}
        onBookSpace={handleBookSpace}
      />

      <Footer />

      <SignupModal 
        isOpen={showSignupModal}
        selectedPlan={selectedPlan}
        onClose={() => setShowSignupModal(false)}
        onSignup={handleSignup}
        onPlanChange={setSelectedPlan}
      />
    </div>
  );
}